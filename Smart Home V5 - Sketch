#include <WiFiS3.h>
#include <WiFiServer.h>

const char* ssid = "Smart Home"; // Substitua pelo nome da sua rede Wi-Fi
const char* password = "miranda642"; // Substitua pela senha da sua rede Wi-Fi

// Configurações de IP fixo
//IPAddress local_ip(192, 168, 1, 45);     // IP NZ
IPAddress local_ip(192, 168, 68, 114);     // IP Brasil

//IPAddress gateway(192, 168, 1, 1);        // Gateway NZ
IPAddress gateway(192, 168, 68, 1);        // Gateway Brasil

//IPAddress subnet(255, 255, 255, 0);       // Máscara de sub-rede
//IPAddress dns(8, 8, 8, 8);                // Servidor DNS (opcional)

//WiFiServer server(3001);  // PORTA BRASIL
WiFiServer server(65123);  // PORTA BRASIL

//INICIO VARIAVEIS DO PROJETO

const int luz_area = 0; // LED conectado à porta 0
const int botao_luz_area = 13; //botao fisico luz area

const int portao_social = 4; // RELE conectado à porta 4
const int botao_portao_social = 14; //botao fisico portao social
int verifica_portaosocial = 15; // verifica alarme ativo ou nao


const int portao = 1; // LED conectado à porta 1
const int botao_portao = 12; //botao fisico luz jardim
int verifica_portao_aberto = 9; // verifica alarme ativo ou nao
int verifica_portao_fechado = 8; // verifica alarme ativo ou nao



const int fita_led = 2; // LED conectado à porta 2
const int botao_fita_led = 11; //botao fisico fita led

const int alarme = 3; // LED conectado à porta 3
int verifica_alarme = 10; // verifica alarme ativo ou nao

bool luzareaState = false; // Estado inicial do LED
bool portaoState = false; // Estado inicial do LED
bool fitaledState = false; // Estado inicial do LED
bool alarmeState = false; // Estado inicial do LED
bool portaosocialState = false; 
//int alarmeState = digitalRead(verifica_alarme); // Estado inicial do LED
//FIM VARIAVEIS DO PROJETO

void setup() {

    // INICIALIZACAO DAS VARIAVEIS
    
    pinMode(luz_area, OUTPUT);
    digitalWrite(luz_area, LOW);

    pinMode(portao_social, OUTPUT);
    digitalWrite(portao_social, HIGH);
    
    pinMode(portao, OUTPUT);
    digitalWrite(portao, LOW);
    pinMode(verifica_portao_aberto, OUTPUT);
    pinMode(verifica_portao_fechado, OUTPUT);

    pinMode(fita_led, OUTPUT);
    digitalWrite(fita_led, LOW);

    pinMode(alarme, OUTPUT);
    pinMode(verifica_alarme, OUTPUT);
    //digitalWrite(alarme, LOW);
    
    //INICIALIZACAO BOTOES FISICOS
    //botao fisico luz area
    pinMode(botao_luz_area, INPUT_PULLUP); // Configura o botão com pull-up interno
    pinMode(botao_portao, INPUT_PULLUP); // Configura o botão com pull-up interno
    pinMode(botao_fita_led, INPUT_PULLUP); // Configura o botão com pull-up interno
    pinMode(botao_portao_social, INPUT_PULLUP);

    // FIM INICIALIZACAO DAS VARIAVEIS

    Serial.begin(115200);
    WiFi.begin(ssid, password);

    Serial.print("Conectando ao Wi-Fi");
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }
    Serial.println("\nConectado ao Wi-Fi!");
    Serial.print("Endereço IP: ");
    Serial.println(WiFi.localIP());

    server.begin();
}

void loop() {


    // Verifica se o alarme esta ativado
    if (digitalRead(verifica_alarme) == 1) { // Se o alarme estiver ativado
        alarmeState = true; // Alarme ativado
    } else if (digitalRead(verifica_alarme) == 0) { // Se o alarme estiver desativado
        alarmeState = false; // Alarme desativado
    }

    // Verifica se o portao esta aberto ou fechado
    if (digitalRead(verifica_portao_aberto) == 1 && digitalRead(verifica_portao_fechado) == 0) { 
    portaoState = true; 
    } else if (digitalRead(verifica_portao_aberto) == 0 && digitalRead(verifica_portao_fechado) == 1) { 
    portaoState = false; 
    }

// Verifica se o portao social esta aberto ou fechado
    if (digitalRead(verifica_portaosocial) == 1 ) { 
    portaosocialState = true; 
    } else if (digitalRead(verifica_portaosocial) == 0) { 
    portaosocialState = false; 
    }

    // Lida com o botão físico da luz da área
    if (digitalRead(botao_luz_area) == LOW) { // Se botão pressionado
        delay(50); // Debounce simples
        if (digitalRead(botao_luz_area) == LOW) { // Confirma pressionado
            luzareaState = !luzareaState; // Alterna o estado
            digitalWrite(luz_area, luzareaState ? HIGH : LOW);
            delay(300); // Evita múltiplos toggles muito rápidos
        }
    }

    // Lida com o botão físico do portao social
    if (digitalRead(botao_portao_social) == LOW) { // Se botão pressionado
        delay(50);
        digitalWrite(portao_social, LOW);  // Fecha o relé
        delay(500);                  // Aguarda 300ms
        digitalWrite(portao_social, HIGH);   // Abre o relé
        delay(500);
    }
    

    // Lida com o botão físico do portao
    if (digitalRead(botao_portao) == LOW) { // Se botão pressionado
        delay(50);
        digitalWrite(portao, HIGH);  // Fecha o relé
        delay(500);                  // Aguarda 300ms
        digitalWrite(portao, LOW);   // Abre o relé
        delay(500);
    }
   

    // Lida com o botão físico da fita LED
    if (digitalRead(botao_fita_led) == LOW) { // Se botão pressionado
        delay(50); // Debounce simples
        if (digitalRead(botao_fita_led) == LOW) { // Confirma pressionado
            fitaledState = !fitaledState; // Alterna o estado
            digitalWrite(fita_led, fitaledState ? HIGH : LOW);
            delay(300); // Evita múltiplos toggles muito rápidos
        }
    }

    // Lida com conexões do cliente
    WiFiClient client = server.available();
    if (client) {
        Serial.println("Cliente conectado!");
        String request = client.readStringUntil('\r');
        Serial.println(request);
        client.flush();

        // INICIO VERIFICACAO DO COMANDO DO CLIENTE

            //BOTAO LUZ AREA
            if (request.indexOf("/LuzArea_Toggle") != -1) {
                luzareaState = !luzareaState; // Alterna o estado do LED
                digitalWrite(luz_area, luzareaState ? HIGH : LOW);
                // Redireciona para a página principal
                client.println("HTTP/1.1 303 See Other");
                client.println("Location: /");
                client.println("Connection: close");
                client.println("Content-Length: 0");
                client.println();
                return; // Finaliza a conexão após o redirecionamento
            }  // FIM BOTAO LUZ AREA

            //BOTAO PORTAO SOCIAL
            if (request.indexOf("/PortaoSocial_Toggle") != -1) {
                portaosocialState = !portaosocialState; // Alterna o estado do LED
                digitalWrite(portao_social, LOW);  // Fecha o relé
                delay(500);                  // Aguarda 300ms
                digitalWrite(portao_social, HIGH);   // Abre o relé
                delay(500);  
                // Redireciona para a página principal
                client.println("HTTP/1.1 303 See Other");
                client.println("Location: /");
                client.println("Connection: close");
                client.println("Content-Length: 0");
                client.println();
                return; // Finaliza a conexão após o redirecionamento
            }  // FIM BOTAO PORTAO SOCIAL

            //BOTAO ABERTURA/FECHAMENTO PORTAO BASCULANTE
            //if (request.indexOf("/Portao_Toggle") != -1) {
            //    portaoState = !portaoState; // Alterna o estado do LED
            //    digitalWrite(portao, portaoState ? HIGH : LOW);
            if (request.indexOf("/Portao_Toggle") != -1) {
                digitalWrite(portao, HIGH);  // Fecha o relé
                delay(500);                  // Aguarda 300ms
                digitalWrite(portao, LOW);   // Abre o relé
                delay(500);                  // Aguarda 300ms
                // Redireciona para a página principal
                client.println("HTTP/1.1 303 See Other");
                client.println("Location: /");
                client.println("Connection: close");
                client.println("Content-Length: 0");
                client.println();
                return; // Finaliza a conexão após o redirecionamento
            }  // FIM BOTAO LUZ AREA

            //BOTAO FITA LED
            if (request.indexOf("/FitaLed_Toggle") != -1) {
                fitaledState = !fitaledState; // Alterna o estado do LED
                digitalWrite(fita_led, fitaledState ? HIGH : LOW);
                // Redireciona para a página principal
                client.println("HTTP/1.1 303 See Other");
                client.println("Location: /");
                client.println("Connection: close");
                client.println("Content-Length: 0");
                client.println();
                return; // Finaliza a conexão após o redirecionamento
            }  // FIM BOTAO FITA LED

            //BOTAO ALARME
            if (request.indexOf("/Alarme_Toggle") != -1) {
                //alarmeState = !alarmeState; // Alterna o estado do LED
                digitalWrite(alarme, HIGH); // Ativa o alarme
                delay(500); // Espera 500ms
                digitalWrite(alarme, LOW); // Desativa o alarme
                delay(500); // Espera 500ms
                // Redireciona para a página principal
                client.println("HTTP/1.1 303 See Other");
                client.println("Location: /");
                client.println("Connection: close");
                client.println("Content-Length: 0");
                client.println();
                return; // Finaliza a conexão após o redirecionamento
            }  // FIM BOTAO ALARME


            
        // FIM VERIFICACAO DO COMANDO DO CLIENTE


        // Responde ao cliente
        client.println("HTTP/1.1 200 OK");
        client.println("Content-Type: text/html; charset=UTF-8");
        client.println();
        client.println("<!DOCTYPE HTML>");
        client.println("<html>");
        client.println("<head>");
        client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">");

        // JAVASCRIPT PARA RECARREGAR A PAGINA AO RESTAURAR A ABA
        client.println("<script>");
        client.println("document.addEventListener('visibilitychange', function() {");
        client.println("    if (document.visibilityState === 'visible') {");
        client.println("        location.reload();");  // Recarrega a página quando a aba for restaurada
        client.println("    }");
        client.println("});");
        client.println("</script>");
        // FIM JAVASCRIPT 

        
        client.println("<style>");
        client.println("body { font-family: Arial, sans-serif; margin: 0; padding: 0; background: linear-gradient(135deg, #f4f4f4, #e0e0e0); color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; }");
        client.println(".container { width: 90%; max-width: 300px; padding: 20px; background: #fff; border-radius: 12px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); text-align: center; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; top: -10%; }");
        client.println("body { font-family: Arial, sans-serif; margin: 0; padding: 0; background: linear-gradient(135deg,rgb(2, 192, 255), #ffffff); color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; }");
        client.println("h1 { font-size: 1.2em; margin-bottom: 15px; }");
        client.println(".toggle { display: inline-block; padding: 8px 16px; background: #007BFF; color: #fff; text-decoration: none; border-radius: 5px; font-size: 0.9em; margin-bottom: 5px; }");
        client.println(".toggle:hover { background: #0056b3; }");
        client.println(".status { font-size: 0.8em; color: #555; margin-top: 5px; }");
        client.println("</style>");
        client.println("</head>");
        client.println("<body>");
        client.println("<div class=\"container\">");
        client.println("<h1 style=\"font-size: 1.5em; margin-bottom: 5px;\">Smart Home - Ver.5</h1>");
        client.println("<h3 style=\"font-size: 0.8em; margin-top: 0;\">beta 1.0</h3>");

        client.println("<br> ");
        
        // INICIO BOTAO LUZ AREA
        client.println(luzareaState 
            ? "<a href=\"/LuzArea_Toggle\" class=\"toggle\" style=\"background:rgb(133, 0, 0); width: 50%; display: inline-block; text-align: center;\">Luz Area</a><p class=\"status\">Luz Area está <strong>LIGADA</strong></p>" 
            : "<a href=\"/LuzArea_Toggle\" class=\"toggle\" style=\"background:rgb(0, 63, 0); width: 50%; display: inline-block; text-align: center;\">Luz Area</a><p class=\"status\">Luz Area está <strong>DESLIGADA</strong></p>");
        // FIM BOTAO LUZ AREA

        client.println("<br> ");

        // INICIO BOTAO PORTAO SOCIAL
        client.println(portaosocialState 
            ? "<a href=\"/PortaoSocial_Toggle\" class=\"toggle\" style=\"background:rgb(133, 0, 0); width: 50%; display: inline-block; text-align: center;\">Portao Social</a><p class=\"status\">Portao Social está <strong>ABERTO</strong></p>" 
            : "<a href=\"/PortaoSocial_Toggle\" class=\"toggle\" style=\"background:rgb(0, 63, 0); width: 50%; display: inline-block; text-align: center;\">Portao Social</a><p class=\"status\">Portao Social está <strong>FECHADO</strong></p>");
        // FIM BOTAO PORTAO SOCIAL
        
        client.println("<br> ");
        
        // INICIO BOTAO PORTAO BASCULANTE
        client.println(portaoState 
            ? "<a href=\"/Portao_Toggle\" class=\"toggle\" style=\"background:rgb(133, 0, 0); width: 50%; display: inline-block; text-align: center;\">Portao</a><p class=\"status\">O portao está <strong>ABERTO</strong></p>" 
            : "<a href=\"/Portao_Toggle\" class=\"toggle\" style=\"background:rgb(0, 63, 0); width: 50%; display: inline-block; text-align: center;\">Portao</a><p class=\"status\">O portao está <strong>FECHADO</strong></p>");
        // FIM BOTAO PORTAO BASCULANTE

        client.println("<br> ");

        // INICIO BOTAO FITA LED
        client.println(fitaledState 
            ? "<a href=\"/FitaLed_Toggle\" class=\"toggle\" style=\"background:rgb(133, 0, 0); width: 50%; display: inline-block; text-align: center;\">Fita LED</a><p class=\"status\">Fita LED está <strong>LIGADA</strong></p>" 
            : "<a href=\"/FitaLed_Toggle\" class=\"toggle\" style=\"background:rgb(0, 63, 0); width: 50%; display: inline-block; text-align: center;\">Fita LED</a><p class=\"status\">Fita LED está <strong>DESLIGADA</strong></p>");
        // FIM BOTAO FITA LED

        client.println("<br> ");

        // INICIO BOTAO ALARME
        client.println(alarmeState 
            ? "<a href=\"/Alarme_Toggle\" class=\"toggle\" style=\"background:rgb(133, 0, 0); width: 50%; display: inline-block; text-align: center;\">Alarme</a><p class=\"status\">Alarme está <strong>LIGADO</strong></p>" 
            : "<a href=\"/Alarme_Toggle\" class=\"toggle\" style=\"background:rgb(0, 63, 0); width: 50%; display: inline-block; text-align: center;\">Alarme</a><p class=\"status\">Alarme está <strong>DESLIGADO</strong></p>");
        // FIM BOTAO ALARME


        client.println("</div>");
        client.println("</body>");
        client.println("</html>");
        client.stop();
        Serial.println("Cliente desconectado.");
    }
}