#include <WiFiS3.h>
#include <WiFiServer.h>

const char* ssid = "Home_Mesh_06"; // Substitua pelo nome da sua rede Wi-Fi
const char* password = "taystrOrbi"; // Substitua pela senha da sua rede Wi-Fi

WiFiServer server(80);

const int luz_area = 0; // LED conectado à porta 0
bool luzareaState = false; // Estado inicial do LED

void setup() {
    pinMode(luz_area, OUTPUT);
    digitalWrite(luz_area, LOW);

    Serial.begin(115200);
    WiFi.begin(ssid, password);

    Serial.print("Conectando ao Wi-Fi");
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }
    Serial.println("\nConectado ao Wi-Fi!");
    Serial.print("Endereço IP: ");
    Serial.println(WiFi.localIP());

    server.begin();
}

void loop() {
    // Lida com conexões do cliente
    WiFiClient client = server.available();
    if (client) {
        Serial.println("Cliente conectado!");
        String request = client.readStringUntil('\r');
        Serial.println(request);
        client.flush();

        // Verifica se o cliente enviou o comando para alternar o LED
        if (request.indexOf("/LuzArea_Toggle") != -1) {
            luzareaState = !luzareaState; // Alterna o estado do LED
            digitalWrite(luz_area, luzareaState ? HIGH : LOW);

            // Redireciona para a página principal
            client.println("HTTP/1.1 303 See Other");
            client.println("Location: /");
            client.println("Connection: close");
            client.println("Content-Length: 0");
            client.println();
            return; // Finaliza a conexão após o redirecionamento
        }

        // Responde ao cliente
        client.println("HTTP/1.1 200 OK");
        client.println("Content-Type: text/html; charset=UTF-8");
        client.println();
        client.println("<!DOCTYPE HTML>");
        client.println("<html>");
        client.println("<head>");
        client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">");
        client.println("<style>");
        client.println("body { font-family: Arial, sans-serif; margin: 0; padding: 0; background: linear-gradient(135deg, #f4f4f4, #e0e0e0); color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; }");
        client.println(".container { width: 90%; max-width: 300px; padding: 20px; background: #fff; border-radius: 12px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); text-align: center; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; top: -10%; }");
        client.println("body { font-family: Arial, sans-serif; margin: 0; padding: 0; background: linear-gradient(135deg, #add8e6, #ffffff); color: #333; display: flex; justify-content: center; align-items: center; height: 100vh; }");
        client.println("h1 { font-size: 1.2em; margin-bottom: 15px; }");
        client.println(".toggle { display: inline-block; padding: 8px 16px; background: #007BFF; color: #fff; text-decoration: none; border-radius: 5px; font-size: 0.9em; margin-bottom: 5px; }");
        client.println(".toggle:hover { background: #0056b3; }");
        client.println(".status { font-size: 0.8em; color: #555; margin-top: 5px; }");
        client.println("</style>");
        client.println("</head>");
        client.println("<body>");
        client.println("<div class=\"container\">");
        client.println("<h1>Controle do LED</h1>");
        client.println("<a href=\"/LuzArea_Toggle\" class=\"toggle\">Alternar Luz</a>");
        client.println(luzareaState ? "<p class=\"status\">Luz Área está <strong>LIGADA</strong></p>" : "<p class=\"status\">Luz Área está <strong>DESLIGADA</strong></p>");
        client.println("</div>");
        client.println("</body>");
        client.println("</html>");
        client.stop();
        Serial.println("Cliente desconectado.");
    }
}
